# Project: PicoVM
# Makefile created by Dev-C++ 4.9.9.2

CPP  = g++.exe -D__DEBUG__
CC   = gcc.exe -D__DEBUG__
WINDRES = windres.exe
RES  = 
OBJ  = main.o map.o types.o value.o vm.o symbol.o func.o primitives.o $(RES)
LINKOBJ  = main.o map.o types.o value.o vm.o symbol.o func.o primitives.o $(RES)
LIBS =  -L"C:/Dev-Cpp/lib" -lalleg  -g3 
INCS =  -I"C:/Dev-Cpp/include" 
CXXINCS =  -I"C:/Dev-Cpp/lib/gcc/mingw32/3.4.2/include"  -I"C:/Dev-Cpp/include/c++/3.4.2/backward"  -I"C:/Dev-Cpp/include/c++/3.4.2/mingw32"  -I"C:/Dev-Cpp/include/c++/3.4.2"  -I"C:/Dev-Cpp/include" 
BIN  = pvm.exe
CXXFLAGS = $(CXXINCS)   -fexpensive-optimizations -O3 -g3
CFLAGS = $(INCS)   -fexpensive-optimizations -O3 -g3
RM = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before pvm.exe all-after


clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o "pvm.exe" $(LIBS)

main.o: main.c C:/Dev-Cpp/include/assert.h C:/Dev-Cpp/include/_mingw.h   C:/Dev-Cpp/include/stdio.h C:/Dev-Cpp/include/stddef.h   C:/Dev-Cpp/include/stdarg.h C:/Dev-Cpp/include/sys/types.h   C:/Dev-Cpp/include/stdlib.h C:/Dev-Cpp/include/ctype.h value.h types.h   map.h symbol.h
	$(CC) -c main.c -o main.o $(CFLAGS)

map.o: map.c C:/Dev-Cpp/include/stdio.h C:/Dev-Cpp/include/_mingw.h   C:/Dev-Cpp/include/stddef.h C:/Dev-Cpp/include/stdarg.h   C:/Dev-Cpp/include/sys/types.h C:/Dev-Cpp/include/stdlib.h   C:/Dev-Cpp/include/assert.h map.h value.h
	$(CC) -c map.c -o map.o $(CFLAGS)

types.o: types.c types.h map.h value.h
	$(CC) -c types.c -o types.o $(CFLAGS)

value.o: value.c value.h C:/Dev-Cpp/include/assert.h   C:/Dev-Cpp/include/_mingw.h C:/Dev-Cpp/include/stdio.h   C:/Dev-Cpp/include/stddef.h C:/Dev-Cpp/include/stdarg.h   C:/Dev-Cpp/include/sys/types.h
	$(CC) -c value.c -o value.o $(CFLAGS)

vm.o: vm.c 
	$(CC) -c vm.c -o vm.o $(CFLAGS)

symbol.o: symbol.c symbol.h types.h map.h value.h   C:/Dev-Cpp/include/malloc.h C:/Dev-Cpp/include/_mingw.h   C:/Dev-Cpp/include/stdlib.h C:/Dev-Cpp/include/stddef.h
	$(CC) -c symbol.c -o symbol.o $(CFLAGS)

func.o: func.c 
	$(CC) -c func.c -o func.o $(CFLAGS)

primitives.o: primitives.c 
	$(CC) -c primitives.c -o primitives.o $(CFLAGS)
