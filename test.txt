defun # >> compile-call end
>>
# get setmac

defun peek >> dup << end

defun defmacro peek # defun get setmac end
>>
defmacro get setmac

defmacro ' >> compile-literal end

defmacro !call call end

defmacro ! >> get # !call end

defmacro !>> >> end

defmacro ## >> compile-literal ' compile compile-call end

defmacro if
	## not
	# ?jump
end
	
defmacro endif
	# resolve:
end

defmacro else
    # jump
    swap
	# resolve:
end

defmacro while
	# label:
end

defmacro do
	## not # ?jump
end

defmacro repeat
  swap
  # jump  # to-label
  # resolve:
end

defmacro test
	label:
	not ?jump
	! swap
	jump to-label
resolve:
end

